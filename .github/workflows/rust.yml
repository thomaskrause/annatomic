on:
  push:
  merge_group:

name: Rust

jobs:
  format:
    name: Format Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1.4.4
      - uses: mbrobbel/rustfmt-check@0.12.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
  static_code_analysis:
    name: Static code analysis
    needs: format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1.4.4
        with:
          components: clippy
      - name: Check code without default features
        run: cargo check --no-default-features
      - name: Check with clippy with all features enabled
        run: cargo clippy --all-features -- -D warnings
  unit-tests:
    env:
      RUST_BACKTRACE: 0
    name: Unit tests
    needs: format
    runs-on: ubuntu-latest
    steps:
      - name: Install packages (Linux)
        if: runner.os == 'Linux'
        uses: awalsh128/cache-apt-pkgs-action@v1.4.2
        with:
          packages: libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev libgtk-3-dev
          version: 1.0
          execute_install_scripts: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --lib
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1.4.4
      - name: Run unit tests
        run: cargo test
