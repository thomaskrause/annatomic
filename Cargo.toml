[package]
authors = ["Thomas Krause <thomas.krause@hu-berlin.de>"]
edition = "2021"
include = ["LICENSE", "**/*.rs", "Cargo.toml"]
license = "Apache-2.0"
name = "annatomic"
version = "0.1.0"

[package.metadata.docs.rs]
all-features = true
targets = ["x86_64-unknown-linux-gnu", "wasm32-unknown-unknown"]

[dependencies]
eframe = {version = "0.30", default-features = false, features = [
  "accesskit", # Make egui compatible with screen readers. NOTE: adds a lot of dependencies.
  "default_fonts", # Embed the default egui fonts.
  "glow", # Use the glow rendering backend. Alternative: "wgpu".
  "persistence", # Enable restoring app state when restarting the app.
  "wayland",
]}
egui = "0.30"
egui_extras = {version = "0.30", features = ["image"]}
image = {version = "0.25", features = ["png"]}
log = "0.4"

# You only need serde if you want app persistence:
anyhow = "1.0.94"
clap = {version = "4.5.23", features = ["derive"]}
crossbeam-queue = "0.3.11"
egui-notify = "0.17.0"
egui-phosphor = "0.8.0"
graphannis = "3.5.1"
graphannis-core = "3.5.1"
rayon = "1.10.0"
rfd = "0.15.1"
serde = {version = "1", features = ["derive"]}

[dev-dependencies]
egui_kittest = {version = "0.30.0", features = ["wgpu", "snapshot"]}
tempfile = "3.14.0"

[patch.crates-io]
egui-notify = {git = "https://github.com/thomaskrause/egui-notify.git"}

# Compile some of the dependencies in release mode if when we are ourself in
# "dev" mode (like building debug binaries or running tests)
[profile.dev.package]
graphannis-core.opt-level = 3
graphannis.opt-level = 3

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
env_logger = "0.11"

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen-futures = "0.4" 
web-sys = "0.3.70" # to access the DOM (to hide the loading text)

[profile.release]
opt-level = 2 # fast and small wasm

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }
